[
  {
    "id": "7ce9e7c9-0631-4800-a7c4-3385e9279ae7",
    "realm": "conflictvisualizer",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "fc87bdbd-ff5d-4fc6-89e5-dd8cb6ada562",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "7ce9e7c9-0631-4800-a7c4-3385e9279ae7",
          "attributes": {}
        },
        {
          "id": "ed4865fe-c3d7-45c7-b553-7b3f842c598c",
          "name": "default-roles-conflictvisualizer",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": ["offline_access", "uma_authorization"],
            "client": {
              "account": ["view-profile", "manage-account"]
            }
          },
          "clientRole": false,
          "containerId": "7ce9e7c9-0631-4800-a7c4-3385e9279ae7",
          "attributes": {}
        },
        {
          "id": "1283395c-9f12-4e4f-a905-186bb000632c",
          "name": "USER",
          "description": "",
          "composite": false,
          "clientRole": false,
          "containerId": "7ce9e7c9-0631-4800-a7c4-3385e9279ae7",
          "attributes": {}
        },
        {
          "id": "e70711ef-bd8a-4976-be2a-f0cc9881a5b5",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "7ce9e7c9-0631-4800-a7c4-3385e9279ae7",
          "attributes": {}
        },
        {
          "id": "f39b2f6f-2012-435c-88dd-1a9cd76af7de",
          "name": "ADMIN",
          "description": "",
          "composite": false,
          "clientRole": false,
          "containerId": "7ce9e7c9-0631-4800-a7c4-3385e9279ae7",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "d5199266-4bc5-4704-a1c4-a0fc2ea7dac1",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "564eabdc-600f-4fa3-9d80-048e29e30f83",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "3451e483-80bc-4a25-9339-ca13f23f730a",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "42bea515-31f8-4319-9049-3d2c167d9e44",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "248f8e3e-b1c5-4805-b5eb-a53ca18d5b32",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "16b32d61-3610-4635-9c1d-b586beb0bc6d",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": ["query-users", "query-groups"]
              }
            },
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "9c97c254-b449-4b90-b9be-075b6103d337",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "78d1e23b-ff15-4b36-bd05-f0147324298e",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "a973d6cd-6218-46e8-a759-4c5360f782aa",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "9de3cfad-677a-47db-b097-3ba69086bbe6",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "0ac2d45b-4f64-4b6f-a734-97929ca0ea99",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "69d8638e-4e9b-4201-b752-ef5621974534",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "ae131997-cc37-44e0-859d-809b0a47c920",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "view-identity-providers",
                  "query-clients",
                  "manage-realm",
                  "query-realms",
                  "view-users",
                  "view-events",
                  "query-groups",
                  "manage-authorization",
                  "view-authorization",
                  "manage-users",
                  "impersonation",
                  "manage-identity-providers",
                  "query-users",
                  "manage-events",
                  "manage-clients",
                  "view-clients",
                  "view-realm",
                  "create-client"
                ]
              }
            },
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "db788378-c936-4ba5-bba6-f4b4ca0425dc",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "42747a07-3425-4594-9734-8375d5bc908c",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "12c63053-0336-4f55-b653-89ebd5c4cbbf",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "7734aad4-26c8-4363-8d44-016f64dd2f40",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": ["query-clients"]
              }
            },
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "eb99d3ed-d3db-4849-85d6-bc8caea0399f",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          },
          {
            "id": "1b234e7b-9bba-4150-93cf-54b4d735e9a0",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
            "attributes": {}
          }
        ],
        "conflictvisualizer-gui": [],
        "security-admin-console": [],
        "conflictvisualizer-api": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "a4c94001-35d0-478e-b7dc-6dd2663c04d6",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "6bc9f100-f5c9-454e-9845-51def7e7886f",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "19bfa56b-fc12-4784-b73c-6dadcaa6e931",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "a4606573-7374-45dc-b111-a9703bdf8a34",
            "attributes": {}
          },
          {
            "id": "29fabd36-a556-4917-934d-0bb2f7194d52",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": ["view-consent"]
              }
            },
            "clientRole": true,
            "containerId": "a4606573-7374-45dc-b111-a9703bdf8a34",
            "attributes": {}
          },
          {
            "id": "dd5f8ac2-fa4e-40e0-9e3c-c889c8660669",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "a4606573-7374-45dc-b111-a9703bdf8a34",
            "attributes": {}
          },
          {
            "id": "a161d177-8250-4824-b786-3aa5a5f6b07a",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "a4606573-7374-45dc-b111-a9703bdf8a34",
            "attributes": {}
          },
          {
            "id": "1f218ffe-a70c-4a8d-b039-4d1f14cfe47d",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "a4606573-7374-45dc-b111-a9703bdf8a34",
            "attributes": {}
          },
          {
            "id": "358b5dd2-82ff-49ac-9514-664bd77c77c8",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "a4606573-7374-45dc-b111-a9703bdf8a34",
            "attributes": {}
          },
          {
            "id": "37588cb6-3873-456f-8e58-e5a304581909",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "a4606573-7374-45dc-b111-a9703bdf8a34",
            "attributes": {}
          },
          {
            "id": "5f4fbda6-0346-4600-81b2-53c40c8a0602",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": ["manage-account-links"]
              }
            },
            "clientRole": true,
            "containerId": "a4606573-7374-45dc-b111-a9703bdf8a34",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [
      {
        "id": "c76c6c75-ab2c-4683-a1c3-cde275ba5df2",
        "name": "admin",
        "path": "/admin",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {
          "realm-management": ["manage-users", "realm-admin"]
        },
        "subGroups": []
      },
      {
        "id": "d32b9d10-c0d6-429d-bf8d-fa0576a00c52",
        "name": "user",
        "path": "/user",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      }
    ],
    "defaultRole": {
      "id": "ed4865fe-c3d7-45c7-b553-7b3f842c598c",
      "name": "default-roles-conflictvisualizer",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "7ce9e7c9-0631-4800-a7c4-3385e9279ae7"
    },
    "requiredCredentials": ["password"],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": ["totpAppMicrosoftAuthenticatorName", "totpAppGoogleName", "totpAppFreeOTPName"],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": ["ES256"],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": ["offline_access"]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": ["manage-account", "view-groups"]
        }
      ]
    },
    "clients": [
      {
        "id": "a4606573-7374-45dc-b111-a9703bdf8a34",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/conflictvisualizer/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/realms/conflictvisualizer/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      },
      {
        "id": "dd8a552a-66f9-4de8-9f3d-0e6e71c77e7a",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/conflictvisualizer/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/realms/conflictvisualizer/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "d1dca04b-7250-4811-ae76-52b1584d7d6b",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      },
      {
        "id": "9abea833-e1c2-415b-bbfb-d1526cb163ec",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      },
      {
        "id": "6bc9f100-f5c9-454e-9845-51def7e7886f",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      },
      {
        "id": "98cd717f-173e-461e-b3df-79aaea466ab4",
        "clientId": "conflictvisualizer-api",
        "name": "",
        "description": "",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["http://localhost:8081/*"],
        "webOrigins": ["http://localhost:8081"],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "access.token.lifespan": "3600",
          "post.logout.redirect.uris": "+",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "use.refresh.tokens": "true",
          "oidc.ciba.grant.enabled": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "require.pushed.authorization.requests": "false",
          "acr.loa.map": "{}",
          "display.on.consent.screen": "false",
          "token.response.type.bearer.lower-case": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      },
      {
        "id": "0f6d23a0-be5f-4ddb-8b11-436a1d9e3a85",
        "clientId": "conflictvisualizer-gui",
        "name": "",
        "description": "",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": ["/*"],
        "webOrigins": ["/*"],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "access.token.lifespan": "3600",
          "client.secret.creation.time": "1680210891",
          "post.logout.redirect.uris": "http://localhost:3000",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "use.refresh.tokens": "true",
          "oidc.ciba.grant.enabled": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "require.pushed.authorization.requests": "false",
          "acr.loa.map": "{}",
          "display.on.consent.screen": "false",
          "token.response.type.bearer.lower-case": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      },
      {
        "id": "cf5b4356-573a-4ea1-88e5-8e8bbc7c3e6b",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      },
      {
        "id": "a100ee78-23e7-46d9-ac7e-983efd7889f6",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/conflictvisualizer/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/admin/conflictvisualizer/console/*"],
        "webOrigins": ["+"],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "66a9fd52-67d6-40ff-aa4c-cacb5e69e327",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      }
    ],
    "clientScopes": [
      {
        "id": "422d8d6e-98ff-4ccf-b080-7d2157b5c36b",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "4ff95f07-9e76-40cd-b434-9a63bdbadd8d",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "cbd8e858-7487-4411-875e-ad9487424fb6",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "821a248e-d7c4-4c84-9b5f-9a650d7a5f06",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "1e23da40-2ea7-462b-8940-c97fee63d90d",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c40aaad3-6240-4aa9-b842-cb772c3cf450",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "f8d891a4-779b-41bd-aa75-5270161a3eb7",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "bd31d789-3a86-4a9e-bea9-2fbbcd39d6bb",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "ad785fc1-99df-4541-ba1c-82c0b9faa810",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "f7facb45-7e10-4bc4-92e6-bb6d2b387f21",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "be37e31e-e478-4629-8ce9-132b3540063a",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "c1a1bb47-3cf6-4488-8544-3c201360b6ad",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "ae7daf98-51e0-4cb5-bc50-ea5afb6d3a84",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "493937e7-682c-4311-a998-36f6868f88f3",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "29c63d5f-24f4-4820-abff-79154c9e48c9",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "4d0c4084-c7ad-4e36-a66d-d80c2c0169ea",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6855f033-0fa2-40e1-88c1-2b8ad00786dc",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9baae47a-8aa3-4d72-a9dd-80f22ae270b3",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "cbb66e8f-7cd5-41ea-9469-c76ad28da5f1",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "31a9ad55-188a-45b2-b737-7829cde69e54",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c2dc7e95-2f60-44de-8ab3-a5c78f50dbcd",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "df930753-7a2f-459a-a3e7-42589438dd07",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "fe312b32-11b8-40c0-9bd5-ef488c820be1",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "00bae2e7-2a46-4fcf-a7c2-928388b606a3",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "fb15c4f1-ba52-4a66-873a-69de54fbe2e8",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "abcebde8-03da-49c9-81e2-0e349daf291c",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "55153ab9-f07f-4d20-b55a-c4cf30f59cb1",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f0cce802-dc8f-4dc3-9357-5719f803d078",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "85d6c754-b09f-40d5-9c12-c88aed4afcfe",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "273f3ed7-7c07-4896-9167-b6b9617cf9e2",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "c4b1c227-e876-4404-878d-3ca913b22bb3",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "beb92929-86c4-4708-885a-3b0770b0d5d7",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "f991f2a7-0f12-4df3-8337-5d44332031ba",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "f60dfd58-45cb-472c-b21b-0af13b514c56",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "f4082338-45c1-43ed-b5d7-1b8970d41e5c",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "8ca856b6-409c-4f64-b696-aef5a2169bcc",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "ada40fd1-fcc3-40c9-b9cf-969e86d672a8",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": ["role_list", "profile", "email", "roles", "web-origins", "acr"],
    "defaultOptionalClientScopes": ["offline_access", "address", "phone", "microprofile-jwt"],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {
      "replyToDisplayName": "",
      "starttls": "false",
      "port": "1025",
      "auth": "",
      "replyTo": "",
      "host": "172.27.119.88",
      "from": "keycloak@cimms.com",
      "fromDisplayName": "",
      "envelopeFrom": "",
      "ssl": "false"
    },
    "eventsEnabled": false,
    "eventsListeners": ["jboss-logging"],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "ee26b27d-333f-4f11-9f8d-fb08511a7d6b",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-property-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-full-name-mapper",
              "saml-user-attribute-mapper",
              "saml-role-list-mapper",
              "saml-user-property-mapper",
              "oidc-sha256-pairwise-sub-mapper"
            ]
          }
        },
        {
          "id": "138828ab-a74f-4599-9dec-c26e0f39e93f",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": ["true"]
          }
        },
        {
          "id": "d343e2b7-a3a2-4670-989b-953c3b0727c9",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": ["200"]
          }
        },
        {
          "id": "298ce022-3a56-4b68-8891-573588d878a5",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "c0f275ef-8dbd-4074-9d44-64405366a616",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "1db69d9a-a1f5-4c96-967a-8a6d47e5dfa4",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": ["true"]
          }
        },
        {
          "id": "d0f7ea00-d0a4-46e2-ba98-a55cfe42f561",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": ["true"],
            "client-uris-must-match": ["true"]
          }
        },
        {
          "id": "4dfbed2c-ed83-4f34-8c43-c75c4deb2e28",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-attribute-mapper",
              "saml-user-attribute-mapper",
              "oidc-full-name-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-address-mapper",
              "saml-role-list-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-property-mapper"
            ]
          }
        }
      ],
      "org.keycloak.userprofile.UserProfileProvider": [
        {
          "id": "93730dbb-fdf8-4f6e-9372-7e0f01d3ce41",
          "providerId": "declarative-user-profile",
          "subComponents": {},
          "config": {}
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "0f53399e-2320-4ac0-9a5a-fe9a714b7440",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "priority": ["100"]
          }
        },
        {
          "id": "3a1f53f0-a7ae-449e-953d-86a104831e28",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "priority": ["100"],
            "algorithm": ["RSA-OAEP"]
          }
        },
        {
          "id": "9bbafe24-7dcb-4ee2-b0b9-077fcdeee869",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "priority": ["100"]
          }
        },
        {
          "id": "6e6a27f9-fc02-4e28-878b-ab3ba3235b3a",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "priority": ["100"],
            "algorithm": ["HS256"]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "6b80e513-231f-41b7-9654-65dc2794cb48",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "1950a110-c40f-46c1-b35e-38fbd5eba918",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "basic-auth-otp",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "66856113-3f1d-4b00-8515-6474cdab83c2",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "e40f7b4d-99f2-41fc-ac3d-9b70a1896250",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "fe5fe467-be76-4032-b477-bd8a2cbc19d4",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "39e3f254-eacc-4c0a-bb88-0cb416de0fcf",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2318ee37-68ef-41be-86b5-ca269b932e46",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "05dfd4d5-315d-4588-85bd-cd9d3b1c8ea0",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "91300dca-35bc-45f0-a20b-2427cd5d3301",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "878e513d-adc3-4e4b-84fc-1cded5c24a39",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "fe357a59-d974-4b0e-85e9-adfabdd42fd1",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "bb5d67ba-697f-4d8d-9e27-b769ca3c14d3",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "8e5565ed-daad-48b0-aad9-8c32dd393dce",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "9f012448-ebef-4222-ab04-5fb4e785c053",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "0583f65d-fe2a-4d26-ae39-f0c161befe50",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "65e41139-9c74-40c2-973a-92b653922370",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "dba0a651-74ee-41c7-9e69-ec35dff60323",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "0069bf19-3e44-42c6-bc8d-e0bb229a027f",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-profile-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "34d76730-909a-4c13-b025-22cffd10e807",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f1876aba-5d9d-4612-9994-91a205b08d1e",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "177bf16d-80a5-4344-8927-7816f434f63e",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "2b2a2ac6-745f-4ed2-88a9-7c40d8557ca6",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "clientOfflineSessionMaxLifespan": "0",
      "oauth2DevicePollingInterval": "5",
      "clientSessionIdleTimeout": "0",
      "parRequestUriLifespan": "60",
      "clientSessionMaxLifespan": "0",
      "clientOfflineSessionIdleTimeout": "0",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "21.0.2",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  },
  {
    "id": "adf2bd65-3b71-4827-8df9-6422feebe13f",
    "realm": "master",
    "displayName": "Keycloak",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 60,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "f59c9f88-485a-4d7a-8ad3-9e0db8f25fa1",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "adf2bd65-3b71-4827-8df9-6422feebe13f",
          "attributes": {}
        },
        {
          "id": "efa04719-c766-4fc1-942c-bc5a0203f53b",
          "name": "default-roles-master",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": ["offline_access", "uma_authorization"],
            "client": {
              "account": ["manage-account", "view-profile"]
            }
          },
          "clientRole": false,
          "containerId": "adf2bd65-3b71-4827-8df9-6422feebe13f",
          "attributes": {}
        },
        {
          "id": "540893bc-7370-442c-ae1d-b1c148d43b28",
          "name": "create-realm",
          "description": "${role_create-realm}",
          "composite": false,
          "clientRole": false,
          "containerId": "adf2bd65-3b71-4827-8df9-6422feebe13f",
          "attributes": {}
        },
        {
          "id": "60a4637c-adf2-4fde-a5c7-4873828ade5a",
          "name": "admin",
          "description": "${role_admin}",
          "composite": true,
          "composites": {
            "realm": ["create-realm"],
            "client": {
              "conflictvisualizer-realm": [
                "query-clients",
                "query-groups",
                "view-realm",
                "query-users",
                "manage-identity-providers",
                "view-events",
                "view-authorization",
                "view-clients",
                "manage-users",
                "query-realms",
                "manage-clients",
                "create-client",
                "manage-authorization",
                "view-users",
                "manage-realm",
                "manage-events",
                "view-identity-providers",
                "impersonation"
              ],
              "master-realm": [
                "create-client",
                "manage-users",
                "query-users",
                "query-realms",
                "view-events",
                "view-authorization",
                "impersonation",
                "query-groups",
                "view-identity-providers",
                "manage-realm",
                "view-realm",
                "manage-authorization",
                "view-users",
                "manage-identity-providers",
                "query-clients",
                "manage-events",
                "manage-clients",
                "view-clients"
              ]
            }
          },
          "clientRole": false,
          "containerId": "adf2bd65-3b71-4827-8df9-6422feebe13f",
          "attributes": {}
        },
        {
          "id": "755fa261-677c-44b4-a679-405bbdae2849",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "adf2bd65-3b71-4827-8df9-6422feebe13f",
          "attributes": {}
        }
      ],
      "client": {
        "conflictvisualizer-realm": [
          {
            "id": "2184b332-d2d7-4d5f-945d-fa550fdf6526",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "d45ca08e-9c46-4531-b9b9-0f610f937aed",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "f4dd3c31-118d-41c2-a867-1288f20152e3",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "1feea361-21e7-42b9-a9e1-21448d225273",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "29b4af27-a863-4749-8297-deac0ad6040d",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "16aa3bb9-9ef8-4253-92a8-7c54a0152fcf",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "conflictvisualizer-realm": ["query-clients"]
              }
            },
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "facdb1a0-b8ea-4e01-8883-fb70f81e0868",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "4efa0379-d85b-45cb-b7ff-2b39df27cab8",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "e393ad8b-65cb-48aa-8e6e-d025603ed1d6",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "25c22dc6-f3be-4019-ba1c-f4f60f1fc1d6",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "15981b81-9677-4a1c-899d-9144316049c1",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "07036428-172d-46dc-94ed-f354e5da5fe2",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "153c83e9-dc9d-47af-a6f9-ebb601891dd1",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "conflictvisualizer-realm": ["query-groups", "query-users"]
              }
            },
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "88dd53f1-d50a-4efd-b36b-2ab669ad9594",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "56b79d3e-d230-42f7-a19f-f18edf64a672",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "83c41a0d-57a9-4977-b97c-f383ea408cb7",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "e666ed5e-5529-4d3d-95de-1470e2be2044",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          },
          {
            "id": "c0d5be42-e5f3-4032-a28d-4c686a6d9482",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "7711f588-be1a-4f24-919d-b800a8b03a18",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "619607f6-3ef2-47bd-a05d-217181489c2a",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "adba042e-1ff8-4d6d-814e-0f699955c391",
            "attributes": {}
          }
        ],
        "master-realm": [
          {
            "id": "512e76da-e943-4b3d-acce-19a564d8c761",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "68156eac-4e03-44c7-bcb5-18c790028cac",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "25de9ce4-602a-49c8-ae2a-27b16fdda717",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "9e18c5e4-84a3-4952-a26b-512b8c5aa4a0",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "38af706c-15b6-4371-b942-1a44f1ce321d",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "dd5eb67f-ad8a-4789-af50-f3b427c88d9d",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "d838d3a6-65d2-478a-abac-e24274203063",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "fa2ea863-e9c6-4f2d-974f-5cc37b7bebbf",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": ["query-users", "query-groups"]
              }
            },
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "ca79e4e2-d26c-4967-bb67-89ab28daafbd",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "0ab97938-8db7-4b16-bd25-1af051074d5a",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "e23084c5-8b66-441e-9441-e2dc29e41cc0",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "2c26e44a-6be4-4a5a-9f51-f43da45ec0a1",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "91e46e74-897b-444b-b16d-f7704a99c23f",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "903f0dc8-16d6-4a42-bb76-2bb042cc16b9",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "e7cf4b29-ce7e-4eda-a8f8-e3ecfd454f36",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "2c30a7e7-8e8f-46f8-99fb-5a9c54a44fe7",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "7843b9c4-1d04-425f-9961-e6aacfe1eb86",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": ["query-clients"]
              }
            },
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          },
          {
            "id": "8f2f84cf-37ac-49b6-b89a-7db60a01edf2",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "3e8a00d5-a216-4b06-9189-e3f518921498",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": ["view-consent"]
              }
            },
            "clientRole": true,
            "containerId": "c903742c-a31c-4795-b6a0-b9439947a0f5",
            "attributes": {}
          },
          {
            "id": "8a639600-c4a5-4ced-a9d9-e16c8644be1c",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "c903742c-a31c-4795-b6a0-b9439947a0f5",
            "attributes": {}
          },
          {
            "id": "c9102df3-fadc-4887-a948-a1adfd4b187a",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": ["manage-account-links"]
              }
            },
            "clientRole": true,
            "containerId": "c903742c-a31c-4795-b6a0-b9439947a0f5",
            "attributes": {}
          },
          {
            "id": "02aa771c-d282-43a8-b7bc-3771e57f65c3",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "c903742c-a31c-4795-b6a0-b9439947a0f5",
            "attributes": {}
          },
          {
            "id": "363289ec-a38c-4d28-bcc7-0e4d88fe366c",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "c903742c-a31c-4795-b6a0-b9439947a0f5",
            "attributes": {}
          },
          {
            "id": "6a4dc4c6-11c8-4d8a-9512-e6b6a9cf4b95",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "c903742c-a31c-4795-b6a0-b9439947a0f5",
            "attributes": {}
          },
          {
            "id": "310832b8-847f-486b-a1ff-b72626ccd9db",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "c903742c-a31c-4795-b6a0-b9439947a0f5",
            "attributes": {}
          },
          {
            "id": "3e844d74-46c7-4bab-ab1c-c2dd9bb315c3",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "c903742c-a31c-4795-b6a0-b9439947a0f5",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "efa04719-c766-4fc1-942c-bc5a0203f53b",
      "name": "default-roles-master",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "adf2bd65-3b71-4827-8df9-6422feebe13f"
    },
    "requiredCredentials": ["password"],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": ["totpAppFreeOTPName", "totpAppMicrosoftAuthenticatorName", "totpAppGoogleName"],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": ["ES256"],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
      {
        "id": "ef463b40-5ea6-41d0-a308-efff85388603",
        "createdTimestamp": 1680208141473,
        "username": "admin",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "credentials": [
          {
            "id": "6a9c2c71-83e9-4554-8b5a-183c9c3f1c88",
            "type": "password",
            "createdDate": 1680208141663,
            "secretData": "{\"value\":\"inUEvTX+ScSExI/pCLF+1I3iy2qhi2lHEvxu8qGht10=\",\"salt\":\"yA8XT+KY71P/Qttbjfed0A==\",\"additionalParameters\":{}}",
            "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": ["default-roles-master", "admin"],
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": ["offline_access"]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": ["manage-account", "view-groups"]
        }
      ]
    },
    "clients": [
      {
        "id": "c903742c-a31c-4795-b6a0-b9439947a0f5",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/realms/master/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      },
      {
        "id": "02034df4-f2d0-4822-8a8f-f18d18fa2157",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/realms/master/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "76c9e8a6-d5de-45cd-9b0d-16229c279fd8",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      },
      {
        "id": "394c6d0d-b9b6-447b-adfd-67a83993c247",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      },
      {
        "id": "adba042e-1ff8-4d6d-814e-0f699955c391",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      },
      {
        "id": "7711f588-be1a-4f24-919d-b800a8b03a18",
        "clientId": "conflictvisualizer-realm",
        "name": "conflictvisualizer Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [],
        "optionalClientScopes": []
      },
      {
        "id": "0477aae3-9a12-4638-99ed-cdfd8fc241ff",
        "clientId": "master-realm",
        "name": "master Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      },
      {
        "id": "979337ae-5a6e-4bc2-b907-2f27f364a9f6",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/master/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/admin/master/console/*"],
        "webOrigins": ["+"],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "76717d86-2288-4c25-976c-64ace54486a1",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
        "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
      }
    ],
    "clientScopes": [
      {
        "id": "43f897bd-2a67-403d-8458-dd07788f8483",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "d3adf7f2-35aa-438d-b270-ccbf0703cf21",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "e58a0102-9da6-4ac6-bc26-ff75f027eaeb",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "b849e648-98f3-4d07-9e13-6368f32114b6",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "bd1248b2-c598-45fb-b7cc-cfb60064ec49",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "b4ea5691-00e8-4c2c-8d84-f597cb2397f0",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "843a1377-15f6-4dd8-a823-5933e2701a80",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          },
          {
            "id": "09946d6e-27db-4228-bec5-9154fbfaf1a5",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "34571f6c-62d9-4231-a9b6-00fe080ad5a1",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "45571683-bd50-4383-bea0-3008b4639173",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f9a95317-9167-4165-af89-8a3a1cea634b",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0cd7b9b1-0224-4b57-aa3b-79208d2afef0",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f4672128-5f40-4820-a6b8-57ce47fc7309",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "a3ec38dc-3041-4f3c-b9ee-6c16a6b40738",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3e7994fc-f3ca-4938-bd49-ff1e16d558b7",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "9d95fe14-d30b-4bf8-9f21-697cd065b72c",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "cad5b64f-8285-4ee1-8a5d-600af3a58188",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5e250c84-80d1-49ab-ada0-20fb9ce611c2",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "eb786cae-7155-4eed-ac04-a3650e769db9",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f4ff997b-6dc6-478d-8664-c9b78bb9e407",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c3db80fe-2433-4563-b218-dc3e1f797799",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "97086137-6ba2-420e-a8cc-28f0567c3a7d",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "01d6e042-bbda-48b7-9289-b36f5ee1335a",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "0d096354-9bfc-419f-9c4f-7762b3b394b7",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "e00f8ff2-6e4c-4bc8-808d-c374d41545ea",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9e12a3e9-77fd-4355-bf33-93899e2a4767",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "734af526-1bc9-4910-bb35-e1c7c738ceef",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "cb87a9ac-16b1-4903-8004-e3df10652fc1",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "400629d6-2808-4980-9ce6-3d06507371f4",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "5ae23bad-43fe-4cd1-b3cc-16e1ff7c0650",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "id": "237257e6-74b6-45ad-b843-febfa0c66a56",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "10063a66-e11b-47df-b175-1a8dbbc3960f",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "38b68acb-ac31-4d38-8538-1a56d3e29859",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "d0bf55f1-6002-40cd-b5b9-70b746feb69e",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "498fef0f-0a37-4ce6-8fdb-23aa6cbc4e41",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "d7c90a88-8219-43b8-80a9-8d636d62aed0",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "fabe8fd5-79ef-41db-aa2b-b09ccb524a1a",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": ["role_list", "profile", "email", "roles", "web-origins", "acr"],
    "defaultOptionalClientScopes": ["offline_access", "address", "phone", "microprofile-jwt"],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "xXSSProtection": "1; mode=block",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": ["jboss-logging"],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "f6d41444-cd97-44d1-98b1-b0131cd972fd",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": ["true"],
            "client-uris-must-match": ["true"]
          }
        },
        {
          "id": "781fb06e-db1d-44ed-aa71-95fb6e6aa3fc",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-full-name-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-user-property-mapper",
              "saml-user-attribute-mapper",
              "oidc-address-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-role-list-mapper"
            ]
          }
        },
        {
          "id": "b0a55af8-2eb5-450c-aa9e-9a19d1207852",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-role-list-mapper",
              "saml-user-attribute-mapper",
              "oidc-address-mapper",
              "saml-user-property-mapper",
              "oidc-full-name-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-sha256-pairwise-sub-mapper"
            ]
          }
        },
        {
          "id": "0b6651dd-fe37-432b-8140-f0cb46d5d71c",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "71c07e64-b49a-43e1-8fe4-7f3e391870cf",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": ["true"]
          }
        },
        {
          "id": "49683db1-ec5e-499d-ac9c-c9e6e617df19",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": ["true"]
          }
        },
        {
          "id": "0ef46c87-f520-4d17-9cee-d7ce23ad33a3",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": ["200"]
          }
        },
        {
          "id": "c1ffa196-4622-4731-b5ab-ad7cafd53a19",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "d353c73d-3e86-4141-9d46-d6edc15af1e8",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": ["3b84dd2e-cedc-4875-9912-b46b0df243e2"],
            "secret": ["xspnGp5Lj2CO2ezAi9epSg"],
            "priority": ["100"]
          }
        },
        {
          "id": "30a59535-2fbe-4801-9ecc-2f8877d61a92",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEpAIBAAKCAQEAsmbEToXNA5MwI8UBpzUsJRjiBo6cfHTNk2PzramfWKXW6JqGvxVT51z+NK6KevyIDevNpuQGfGaO9YXT5SYhescZinC3MPyscGWt9DJBcD7A0ic1n8+9wenZH1e5jeRkaixC9sihGzXQx31zucfD3EBegudLTl+oAs/ZbQQSbVlUZqay7me+VhNnkW3PCokKbXvaQ+Mt+gmBkx58zsUK5ROHwGOQuSu10wdYnsqLfZWaF80HWK8XP8nb7w2SyKGGtkvCMdezeJW1b1fay6offIDXIbfQBFwgPJpy29HlRmWAWSRtgtPGkEU9NYsOT6zWH851WAXlmTH0rOoc/esVVwIDAQABAoIBAFZZwrQFNIYB9N+jaFjwNkVghWrKFXlyKd0pGJYaz6ufXeXpgcY0ww9uJgcG4rWDzTD7zWd14KPPGmxB0h4MtlDQ1Q5631jBPJAMz0WvG5iCb19pJh4L9hvJnlP66LAC+A2iDemYk85xXnRoxx6J0EYoC/cNkBhH2bE+vM11FpxBPWPbSOOuFgJGx8mdTlTNJMFZOdDYTzL39puG90SxGK3VLeq5DojUj3SZrUuQY00ZK5uW3Hr/gtnfXKmfnkLqf7kURbnFjumD6xw3tCFl3JbuHMpS/Q5KDrnAeMXetOorVEKF20EHAMXBKynGgp5T33xoSKLh/UmvVhHUCiBk8gECgYEA1vK0qfDYY6NG5OMIU3CgSl1eRllxt/hQZGrnxMo47P1naUU6kYXeKzT21EroCdD5tK55V3Dq616huGqT+9LjwNVI/LSNrgwBjl8BpSmPYtF1cEo1NPJPL6CE1kVgxnkc2WGG+9W+F//weCqYO3s/L2ilLfU+N+Dxbilixlef91cCgYEA1Hk2wl9FQ5MEFOP7ZmZbUaNSIkYxVaKARkyaErnXnWtX6o7X+kpjFSlz27r9GFNUA0wmMty45PvCNAuiDP2rD522kd8v2AlaPVQYkPSHpRnHVeguWGqLNvnDGvwnv1on511pe0noURFqP9HbuCWZTPS/QHGxWdUOyVmjpCLxEgECgYEAvZNXxd5WayJRX4PhDv5xUMUiZbdzdYc7GCW1fjnAlTw1nYHiUwCXXtIatEfQeP/ni/SprnY3qxlOVsEg/WQVXTh/Y+m2X3/VS4T9hXavML997Wh1ntnq/x16qySLYuDkkdDTZX8xZidkJgejNirQIncP4AXBNzVcmgVESZx0yIcCgYEAgWPHqxqlbX9MDwS/Bh7zIYYZ8HFafdHV1/myIhE2ctD52wdeEzfVmv+BZKA8nOGx2cg3wuWTWy7NlzA2YT7hO0NJ+Q83bZJUd+CMjUm8iRhnwbMA9ir72GDFJdvEwMzAXC8Qm1noteWrFG5SJZQQBUNObIpP/Gq49Hk4JC57LAECgYAUiC5RBIBdR26YtDgSRAW3GRj2rt5phlPqGu7qNFsdSbOYu7r4NukVZDrELnc4jwuwXj8oVl2MYHDjLeZloHCBNVudHUWrcLGwzN6PveEwQsf/kBnFkm4ezyY3fXEL7MjhwUsu8Sc+CkmXP2RcfAeLv2ENcimg0wpkv+ztB2R1Jg=="
            ],
            "keyUse": ["ENC"],
            "certificate": [
              "MIICmzCCAYMCBgGHNDWD6DANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjMwMzMwMjAyNzE1WhcNMzMwMzMwMjAyODU1WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCyZsROhc0DkzAjxQGnNSwlGOIGjpx8dM2TY/OtqZ9Ypdbomoa/FVPnXP40rop6/IgN682m5AZ8Zo71hdPlJiF6xxmKcLcw/KxwZa30MkFwPsDSJzWfz73B6dkfV7mN5GRqLEL2yKEbNdDHfXO5x8PcQF6C50tOX6gCz9ltBBJtWVRmprLuZ75WE2eRbc8KiQpte9pD4y36CYGTHnzOxQrlE4fAY5C5K7XTB1ieyot9lZoXzQdYrxc/ydvvDZLIoYa2S8Ix17N4lbVvV9rLqh98gNcht9AEXCA8mnLb0eVGZYBZJG2C08aQRT01iw5PrNYfznVYBeWZMfSs6hz96xVXAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAF4VRofGJUJgUv4m/2i3Nht7lJ/+w+F4OAmjWXS59NQQ9RN2kNg9bptlzSW28yGSVDTtxQz+8tgfJt6UPUF4sqMOdrufxnZdZ8d+GNbMQhqe3AgvXEd0sOmxRe+tzGYUFIwWTkuZ6ngmtamcpaMYvvuEyAZT1xl/reJBFsaGq6/NN7shrx15W7qXIr2Hse8a5Zyu70doT33C7yMsJ60B1Aqi9P2cMNhYsyXSCwRlP2OSBtTdbJsLBhOwh1UGBFF2ODFHDjtF8XS/pnHsZdt6ZZ39DNnMJiTS5kB1iToguSSQxvOprvnwEB30qE/zBizbZvnjto6l32xBul1VKoHWSY4="
            ],
            "priority": ["100"],
            "algorithm": ["RSA-OAEP"]
          }
        },
        {
          "id": "2ab896a4-30fc-4ca7-a179-34f9ee93b8ec",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEpQIBAAKCAQEAlIg6JBFCIMo3zwnq/zKeft5ve6yglRBJoaXtIRqfTcx7spEePcIif9ruO+KuBxiRq6xWbQGLBPmiasVbSs4Vvz/MXU+mLqJsD0OwubhDuruk7tG8pmPVqD8LdDryiTTnD4f6SgwuX0yOgb54QCg6xqtPRyYQ7RKTtxrtNdvfoOwef0tNDyfw+OYyF8GxACF0eV/T6tPNigpZSwW9u8Ouuen04yjKFzhD9odwTSdvXasuLDpGdd+ExKeWvFpfp31rO0DtMursGE2at5+mMipb8JVss2mbE8DqRlB27beEAmqqBMDak8f9ZefmaQ+c5xObLlKVcpXcB+05CO8f6SCSIQIDAQABAoIBAAIqOyi37K4ULHyS0S9PklJYlSjpEv0hO+WEiOCM5goJAzuO1HFDgWO6MfNDAlTdpY/qRuc3WMqlhdnHDyXXu6bqO+UXSl2PJgKR8sM+PZR89DI78eM9/MkDRDw5OLxJvl1yVrJaG5ntgH1BJLkQrQykxhbMJf6CoQ8P8CmzDv8mNDtXowaHHOalHkdvtpX8tbxmJY+YsrRI4Ef9PWCyNoqvIzak5okgRrwcZiHK+SZLrc5JmLBkaBPd8L5iB/CJEQ25JN/5RMwpfkSi0T8lc0gVBMbRMd7AtDYQRAymRJEJJOHN5FEIBG/wlgYdbKoYZ2DJcw7w5F0FvO7aEcsZh/ECgYEAw23e/ciYRE+6QoTP0/R3umzFZU8PDHDJq3k7MvTbe9QrjVOykwwTz2IH7cL3w3rCMRJCy4lTor5V3RyBJqS79fDZf8MUTJe6bigGLj1pgrsh1lf4S1zyQm39YioTJTPuqRzM6s1Andx/JeEdzl5TK3sUuXVO5L0oiVFpjV58CJkCgYEAwpFbmHXkT+7pXCnTpC1q9OlToDBeO8bj75Su6FLXhP9sSs9HzdlpxM6d3Kr8s4TkAO3oepeRLxD3lTmJI/SeDyy85A8fHADdj4yyFp4SZ5I7AwFWdkCJHweyyo2OeJYmRJaLL6U1TxETARA7kFrFzaXBFU1acqibBoW9z93VoskCgYEAgar49jKOtWShFVnB+8SNXGinYNzgA0Uiyl+Z4+mLZ9ITQ6ZxKhgtXMCSujNO6akeCCkxoJLxp13a4uby2o0bGchAyADMCzXxQP3VfADLbS50+R9NY9O7+k+4e9Wm9lxK0nKFlJWzdgrDYoLHoBH95S+5RISNYEASEWqvOlmiuqECgYEAuUZ/qWvB8Jf5oei2f6U8L2GsX2MPqO6ZCQBVmieg0SYFMiu2HYBF5sI1svcj0bLfBz+FXI/OEbqfeHska5e5l4urh6QapKjyUorQ3xbBQd0O0qrIcay8pk7HY3huzcd1Q2Tzv3gbjmIc7atOfQTjTRPlDGrvkTWbAhgDCtkcYXkCgYEAph6KE7Zsc3yBROlgujUK0thWBg0KrxogukT8P/CYYgvvi5HbSLCieqqFd/AfMsr9NJqkkh97FvP+66/eytrpwBLGjzAAKwEo8u2yjS3U3H95oafXzyOF92SdLqH0GB0HDDXwF1XEmOlZEGJKp/S9QWfIJPbNByBtbnZG1sCewtU="
            ],
            "keyUse": ["SIG"],
            "certificate": [
              "MIICmzCCAYMCBgGHNDWBaDANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjMwMzMwMjAyNzE0WhcNMzMwMzMwMjAyODU0WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUiDokEUIgyjfPCer/Mp5+3m97rKCVEEmhpe0hGp9NzHuykR49wiJ/2u474q4HGJGrrFZtAYsE+aJqxVtKzhW/P8xdT6YuomwPQ7C5uEO6u6Tu0bymY9WoPwt0OvKJNOcPh/pKDC5fTI6BvnhAKDrGq09HJhDtEpO3Gu0129+g7B5/S00PJ/D45jIXwbEAIXR5X9Pq082KCllLBb27w6656fTjKMoXOEP2h3BNJ29dqy4sOkZ134TEp5a8Wl+nfWs7QO0y6uwYTZq3n6YyKlvwlWyzaZsTwOpGUHbtt4QCaqoEwNqTx/1l5+ZpD5znE5suUpVyldwH7TkI7x/pIJIhAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAD0gLBNqZNgNUe9qU815LP5sQe0P0JtjlG//NdTmc+XRPdvI+mWg6hQL0EL8F9DS0LJ1O9tf89c41VTK3AsKtUHqn0DUyZY/KoowFVRze/TTmA7isEfQ+K1HxiOWeTtlMTk6x9bC59aXk3QIlhzYhvrj3DoXIRZczAoF5rkAMOSqRgj6WL2bO6li6KVrw91EPo2x6TuI4osYiKmHt0l2xjnU8ZbH1CZ+5QgqMhc4HsKNRGIgI5PYck4h+LiFbsVxJApkZeG8LGJhWxxE+uwYGl+y9i9MEjANrOkTV6Ht+//4071RtIblRv2wsjIsqp8l5Y2A719PQRVEv+x4dmxtbRc="
            ],
            "priority": ["100"]
          }
        },
        {
          "id": "3a16ce6b-d15b-4f81-860c-b645d5a9e209",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": ["938cea59-e4a9-4f59-b699-7d725bfd7214"],
            "secret": ["7wfm0NcDCcBYPSYvbijbMAtdp_jCQVnZvTrCs4zA_iHf6NbD5VrEgqOsA5rr61ecLwn1ZfaliH_QmsfE0Vlgwg"],
            "priority": ["100"],
            "algorithm": ["HS256"]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "2a4b09e6-6dc8-4725-8a2f-67c5ceef00b4",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "925649c6-781e-47af-9a1f-21bf09cdb706",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "basic-auth-otp",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "9acaddf3-021e-4175-97bb-e34b756c8117",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f8a65966-f465-40d1-8768-17134b442519",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "9f3bd32c-62ed-4021-a699-ae391c3dcfaf",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "7cc0feba-5603-4735-a913-70db9264bfdd",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "227031bb-acfe-437d-8805-b0e52e2bac3c",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f3f51dac-6a90-45d1-acb6-ccfccf75ef73",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "3228291f-0003-4bbd-81f2-5d0dc410db48",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "647d8afe-1b32-4fbb-909b-3e74dcd17f11",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "de7df11b-7833-42f8-b1e4-9253f227274e",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "83c19494-e853-42f3-b1a5-c213f543633a",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "3d4db6c6-868b-4633-9da5-11c4d73ab444",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "269d0a94-1582-47bd-906e-de3a2219198c",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "cc8125d0-0dab-4359-b016-671da588488b",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "ed666772-de98-48a3-90a5-86cad67ff292",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f97a1a2f-1fed-4e4f-9194-984f8389345b",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "d60b85ee-5c11-432e-b2f5-f81a91e6ab93",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-profile-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "0a9f5dac-e375-4511-8b96-e74b3250a4d6",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "0de01a6f-246d-410d-80cc-c45fe9f0b3da",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "1e17917f-7cbf-415a-bbac-10b315c3ea28",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "6b99d2e4-52b0-4a96-9dc2-16b5e7b62105",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "parRequestUriLifespan": "60",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "21.0.1",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  }
]
